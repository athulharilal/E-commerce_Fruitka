<body class="cbp-spmenu-push">
    <div class="main-content">
        <!-- main content start-->
        <div id="page-wrapper" style="background-color: #1A1A1A;">
            <div class="main-page">
                <div class="col_3">
                    <div class="col-md-3 widget widget1" style="margin-top: 2rem; background-color: #1A1A1A;">
                        <div class="r3_counter_box"
                            style="background-color: #1A1A1A;">
                            <i class="pull-left fa fa-users dollar2 icon-rounded"></i>
                            <div class="stats">
                                <span style="color: rgb(231, 240, 247);" >{{userCount}}</span> <br>
                                <span>Total Users</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 widget widget1" style="margin-top: 2rem; background-color: #1A1A1A;" >
                        <div class="r3_counter_box"
                            style="background-color: #1A1A1A; ">
                            <i class="pull-left fa fa-laptop user1 icon-rounded"></i>
                            <div class="stats">
                                <span style="color: rgb(231, 240, 247);" >{{productCount}}</span> <br>
                                <span>Total Products</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 widget widget1" style="margin-top: 2rem; background-color: #1A1A1A;" >
                        <div class="r3_counter_box"
                            style="background-color: #1A1A1A; ">
                            <i class="pull-left fa fa-money user2 icon-rounded"></i>
                            <div class="stats">
                                <span style="color: rgb(231, 240, 247);" >{{orderCount}}</span> <br>
                                <span>Total Orders</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 widget widget1" style="margin-top: 2rem; background-color: #1A1A1A;" >
                        <div class="r3_counter_box"
                            style="background-color: #1A1A1A; ">
                            <i class="pull-left fa fa-solid fa-ban dollar1 icon-rounded"></i>
                            <div class="stats">
                                <span style="color: rgb(231, 240, 247);">{{cancelCount}}</span> <br>
                                <span>Odrs Canclld</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 widget" style="margin-top: 2rem; background-color: #1A1A1A;" >
                        <div class="r3_counter_box"
                            style="background-color: #1A1A1A; ">
                            <i class="pull-left fa fa-money user2 icon-rounded"></i>
                            <div class="stats">
                                <span style="color: rgb(231, 240, 247);" >Rs.{{totalRevenue}}</span> <br>
                                <span>Total Revenue</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md- " style="background-color: #1A1A1A;">
        <div class="container-fluid">
            <div class="row">

            </div>
        </div>
    </div>
    <section class="py-5 mx-3 container-fluid" style="background-color: #1A1A1A;">
        <div class="row" style="margin-left: 14rem;">
            <div class="flex-container">
                <div class="ms-auto me-auto bg-white mb-5 col-6"
                    style="width: 50%; border-radius: 20px; border: solid 3px rgba(255, 26, 104, 1);">
                    <canvas id="bar-chart"></canvas>
                </div>
                <div class="col-lg-5 mt-5 ms-auto me-auto bg-white col-6"
                    style="width: 50%; border-radius: 20px; border: solid 3px rgba(255, 26, 104, 1);">
                    <canvas id="circle-chart"></canvas>
                </div>
            </div>
        </div>
        <div class="row" style="margin-left: 14rem;">
            <div class="flex-container">
                <div class="ms-auto me-auto bg-white mb-5 col-6"
                    style="width: 50%; border-radius: 20px; border: solid 3px rgba(255, 26, 104, 1);">
                    <canvas id="cat-chart"></canvas>
                </div>
                <div class="ms-auto me-auto bg-white mb-5 col-6"
                    style="width: 50%; border-radius: 20px; border: solid 3px rgba(255, 26, 104, 1);">
                    <canvas id="payment-chart"></canvas>
                </div>

            </div>
        </div>
    </section>

    <style>
        .flex-container {
            display: flex;
            flex-wrap: nowrap;
            background-color: #161414;
        }

        .flex-container>div {
            background-color: #161414;
            width: 100px;
            margin: 10px;
            text-align: center;
            line-height: 75px;
            font-size: 30px;
        }
    </style>

</body>



<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var ctx = document.getElementById('revenueChart').getContext('2d');
    var chart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Daily', 'Weekly', 'Yearly', 'Total'],
            datasets: [{
                label: 'Revenue',
                data: [{
                    {
                        dailyRevenue
                    }
                }, {
                    {
                        weeklyRevenue
                    }
                }, {
                    {
                        yearlyRevenue
                    }
                }, {
                    {
                        totalRevenue
                    }
                }],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.5)',
                    'rgba(54, 162, 235, 0.5)',
                    'rgba(255, 206, 86, 0.5)',
                    'rgba(75, 192, 192, 0.5)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>

<script>
    const monthName = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    const weekName = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
    const monthlyProfit = Array(12).fill(0);
    const weekly = Array(7).fill(0);

    const barChart = document.getElementById("bar-chart").getContext('2d');
    const circleChart = document.getElementById("circle-chart").getContext('2d');
    const catChart = document.getElementById("cat-chart").getContext('2d');
    const paymentChart = document.getElementById("payment-chart").getContext('2d');

    document.addEventListener('DOMContentLoaded', () => {
        fetch('/admin/chart-data', {
                method: 'get',
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(res => res.json())
            .then(res => {
                const {
                    data,
                    weeklyReport,
                    catData,
                    paymentData
                } = res;

                data.forEach(item => {
                    monthlyProfit[item.month - 1] = item.total;
                });

                const months = monthName;
                const monthlyData = {
                    labels: months,
                    datasets: [{
                        label: 'Monthly sales',
                        backgroundColor: "blue",
                        borderColor: 'rgb(255, 99, 132)',
                        data: monthlyProfit,
                    }]
                };
                const monthlyConfig = {
                    type: 'line',
                    data: monthlyData,
                    options: {}
                };
                const chart1 = new Chart(barChart, monthlyConfig);

                weeklyReport.forEach(item => {
                    weekly[item.date - 1] = item.total;
                });

                const labels = weekName;
                const weeklyData = {
                    labels: labels,
                    datasets: [{
                        label: 'Weekly sales',
                        backgroundColor: 'red',
                        borderColor: 'red',
                        data: weekly,
                    }]
                };
                const weeklyConfig = {
                    type: 'bar',
                    data: weeklyData,
                    options: {}
                };
                const chart2 = new Chart(circleChart, weeklyConfig);

                const catLabels = ["MONSOON", "WINTER", "SPRING","SUMMER"];
                const catValues = catLabels.map((label) => {
                    const cat = catData.find((item) => item._id === label);
                    return cat ? cat.total : 0;
                });
                const catColors = ["green", "orange", "purple"]; // Define colors for each category
                const catDataChart = {
                    labels: catLabels,
                    datasets: [{
                        label: 'Incoming data',
                        backgroundColor: catColors,
                        borderColor: catColors,
                        data: catValues,
                    }]
                };
                const catConfig = {
                    type: 'doughnut',
                    data: catDataChart,
                    options: {}
                };
                const chart3 = new Chart(catChart, catConfig);


                // Process payment data
                const paymentLabels = paymentData.map(item => {
                    if (item.PaymentMethod === "Razorpay") {
                        return "Razorpay";
                    } else if (item.PaymentMethod === "cod") {
                        return "COD";
                    } else if (item.PaymentMethod === "wallet") {
                        return "Wallet";
                    } else {
                        return item.PaymentMethod;
                    }
                });
                const paymentValues = paymentData.map(item => item.total);

                const paymentColors = ["green", "orange", "purple"]; // Define colors for payment methods
                const paymentDataChart = {
                    labels: paymentLabels,
                    datasets: [{
                        label: 'Payment methods',
                        backgroundColor: paymentColors,
                        borderColor: paymentColors,
                        data: paymentValues,
                    }]
                };
                const paymentConfig = {
                    type: 'pie',
                    data: paymentDataChart,
                    options: {}
                };
                const chart4 = new Chart(paymentChart, paymentConfig);
            });
    });
</script>


<!-- Additional scripts for amcharts -->
<script src="js/amcharts.js"></script>
<script src="js/serial.js"></script>
<script src="js/export.min.js"></script>
<link rel="stylesheet" href="css/export.css" type="text/css" media="all" />
<script src="js/light.js"></script>
<script src="js/index1.js"></script>
<!-- Additional scripts for amcharts -->